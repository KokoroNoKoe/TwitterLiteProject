#BlueJ class context
comment0.params=
comment0.target=UserDatabase()
comment0.text=\r\n\ Private\ constructor\r\n
comment1.params=id\ user\ group
comment1.target=boolean\ addUser(java.lang.String,\ UserComponent,\ UserGroup)
comment1.text=\r\n\ This\ methods\ takes\ a\ new\ User\ and\ a\ UserGroup.\r\n\ and\ adds\ the\ User\ into\ the\ HashMap\r\n\r\n\ @param\ id\ the\ user\ id\ of\ the\ new\ User\ to\ be\ added\r\n\ @param\ user\ the\ new\ User\r\n\ @param\ group\ the\ UserGroup\ to\ which\ the\ new\ User\ to\ be\ added\r\n\ @return\ true\ if\ the\ User\ is\ successfully\ added\r\n
comment10.params=user
comment10.target=boolean\ isUser(UserComponent)
comment10.text=\r\n\ Checks\ if\ the\ given\ UserComponent\ is\ a\ User\r\n\ @param\ user\ UserComponent\r\n\ @return\ true\ if\ the\ given\ UserComponent\ is\ a\ instance\ of\ User\r\n
comment11.params=group
comment11.target=boolean\ isGroup(UserComponent)
comment11.text=\r\n\ Checks\ if\ the\ given\ UserComponent\ is\ a\ UserGroup\r\n\ @param\ group\ UserComponent\r\n\ @return\ true\ if\ the\ given\ UserComponent\ is\ a\ instance\ of\ UserGroup\r\n
comment12.params=
comment12.target=int\ getNumOfUsers()
comment12.text=\r\n\ @return\ the\ total\ number\ of\ users\r\n
comment13.params=
comment13.target=int\ getNumOfGroups()
comment13.text=\r\n\ @return\ the\ total\ number\ of\ groups\r\n
comment14.params=
comment14.target=int\ getNumOfTweets()
comment14.text=\r\n\ @return\ the\ total\ number\ of\ tweets\r\n
comment15.params=
comment15.target=int\ getNumOfPositiveMsg()
comment15.text=\r\n\ @return\ the\ total\ number\ of\ tweets\ containing\ any\ positive\ word\r\n
comment16.params=
comment16.target=float\ getPercentOfPositiveMsg()
comment16.text=\r\n\ @return\ the\ percentage\ of\ the\ positive\ tweets\r\n
comment17.params=
comment17.target=UserDatabase\ getInstance()
comment17.text=\r\n\ Singleton\ method\ to\ restrict\ the\ creation\ of\ this\ class\ just\ once\r\n\ @return\ a\ new\ UserDatabase\ if\ it\ is\ not\ previously\ created\r\n
comment2.params=id
comment2.target=User\ getUserFromDatabase(java.lang.String)
comment2.text=\r\n\ Find\ a\ user\ reference\ from\ the\ map\ with\ the\ given\ key\r\n\r\n\ @param\ id\ the\ user\ id\ for\ the\ user\ you\ want\r\n\ @return\ the\ User\ mapped\ with\ the\ given\ key,\ if\ does\ not\ exist,\ return\ null\r\n
comment3.params=id
comment3.target=UserGroup\ getGroupFromDatabase(java.lang.String)
comment3.text=\r\n\ Find\ a\ user\ group\ reference\ from\ the\ map\ with\ the\ given\ key\r\n\r\n\ @param\ id\ the\ group\ id\ of\ the\ UserGroup\ you\ wnat\r\n\ @return\ the\ UserGroup\ mapped\ with\ the\ given\ key,\ if\ does\ not\ exist,\ return\ null\r\n
comment4.params=root
comment4.target=void\ addRoot(UserGroup)
comment4.text=\r\n\ Adds\ a\ root\ UserGroup\ to\ the\ HashMap\r\n\ @param\ root\ the\ root\ UserGroup.\r\n
comment5.params=id\ group\ parentGroup
comment5.target=boolean\ addGroup(java.lang.String,\ UserComponent,\ UserGroup)
comment5.text=\r\n\ Adds\ a\ UserGroup\ to\ the\ database\ if\ there\ is\ no\ same\ id\r\n\ @param\ id\ the\ id\ of\ the\ UserGroup\ to\ add\r\n\ @param\ group\ the\ UserGroup\ to\ add\r\n\ @param\ parentGroup\ the\ parent\ UserGroup\ to\ which\ the\ new\ UserGroup\ to\ be\ added\r\n\ @return\ true\ if\ the\ UserGroup\ is\ successfully\ added\ to\ the\ HashMap\r\n
comment6.params=tweet
comment6.target=void\ addTweet(Tweet)
comment6.text=\r\n\ Adds\ a\ Tweet\ to\ the\ list\ of\ Tweets.\r\n\ And\ checks\ if\ the\ Tweet\ contains\ a\ positive\ word\r\n\ @param\ tweet\ a\ Tweet\r\n
comment7.params=tweet
comment7.target=void\ incrementPositive(Tweet)
comment7.text=\r\n\ Checks\ the\ given\ Tweet\ contains\ a\ positive\ word,\r\n\ and\ if\ true,\ increments\ a\ counter.\r\n\ @param\ tweet\ a\ Tweet\ to\ be\ evaluated\r\n
comment8.params=id
comment8.target=boolean\ doesIdExist(java.lang.String)
comment8.text=\r\n\ Checks\ if\ the\ id\ is\ already\ in\ the\ HashMap\r\n\ @param\ id\ the\ give\ id\ to\ check\r\n\ @return\ true\ if\ a\ given\ key\ (id)\ is\ in\ the\ map\r\n
comment9.params=groupId
comment9.target=UserGroup\ findGroup(java.lang.String)
comment9.text=\r\n\ Checks\ if\ a\ given\ group\ id\ is\ already\ in\ the\ HashMap,\r\n\ and\ return\ the\ UserGroup\ reference\ if\ it\ exists\r\n\ @param\ groupId\ user\ group\ to\ be\ checked\r\n\ @return\ GroupUser\ of\ the\ given\ key\r\n
numComments=18
